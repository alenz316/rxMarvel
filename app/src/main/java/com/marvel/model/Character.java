/*
 * gateway.marvel.com
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Cable
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.marvel.model;

import org.apache.commons.lang3.ObjectUtils;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.marvel.model.ComicList;
import com.marvel.model.EventList;
import com.marvel.model.Image;
import com.marvel.model.SeriesList;
import com.marvel.model.StoryList;
import com.marvel.model.Url;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.LocalDate;

/**
 * Character
 */

public class Character {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("modified")
  private LocalDate modified = null;

  @SerializedName("resourceURI")
  private String resourceURI = null;

  @SerializedName("urls")
  private List<Url> urls = null;

  @SerializedName("thumbnail")
  private Image thumbnail = null;

  @SerializedName("comics")
  private ComicList comics = null;

  @SerializedName("stories")
  private StoryList stories = null;

  @SerializedName("events")
  private EventList events = null;

  @SerializedName("series")
  private SeriesList series = null;

  public Character id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * The unique ID of the character resource.
   * @return id
  **/
  @ApiModelProperty(value = "The unique ID of the character resource.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Character name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the character.
   * @return name
  **/
  @ApiModelProperty(value = "The name of the character.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Character description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A short bio or description of the character.
   * @return description
  **/
  @ApiModelProperty(value = "A short bio or description of the character.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Character modified(LocalDate modified) {
    this.modified = modified;
    return this;
  }

   /**
   * The date the resource was most recently modified.
   * @return modified
  **/
  @ApiModelProperty(value = "The date the resource was most recently modified.")
  public LocalDate getModified() {
    return modified;
  }

  public void setModified(LocalDate modified) {
    this.modified = modified;
  }

  public Character resourceURI(String resourceURI) {
    this.resourceURI = resourceURI;
    return this;
  }

   /**
   * The canonical URL identifier for this resource.
   * @return resourceURI
  **/
  @ApiModelProperty(value = "The canonical URL identifier for this resource.")
  public String getResourceURI() {
    return resourceURI;
  }

  public void setResourceURI(String resourceURI) {
    this.resourceURI = resourceURI;
  }

  public Character urls(List<Url> urls) {
    this.urls = urls;
    return this;
  }

  public Character addUrlsItem(Url urlsItem) {
    if (this.urls == null) {
      this.urls = new ArrayList<Url>();
    }
    this.urls.add(urlsItem);
    return this;
  }

   /**
   * A set of public web site URLs for the resource.
   * @return urls
  **/
  @ApiModelProperty(value = "A set of public web site URLs for the resource.")
  public List<Url> getUrls() {
    return urls;
  }

  public void setUrls(List<Url> urls) {
    this.urls = urls;
  }

  public Character thumbnail(Image thumbnail) {
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * The representative image for this character.
   * @return thumbnail
  **/
  @ApiModelProperty(value = "The representative image for this character.")
  public Image getThumbnail() {
    return thumbnail;
  }

  public void setThumbnail(Image thumbnail) {
    this.thumbnail = thumbnail;
  }

  public Character comics(ComicList comics) {
    this.comics = comics;
    return this;
  }

   /**
   * A resource list containing comics which feature this character.
   * @return comics
  **/
  @ApiModelProperty(value = "A resource list containing comics which feature this character.")
  public ComicList getComics() {
    return comics;
  }

  public void setComics(ComicList comics) {
    this.comics = comics;
  }

  public Character stories(StoryList stories) {
    this.stories = stories;
    return this;
  }

   /**
   * A resource list of stories in which this character appears.
   * @return stories
  **/
  @ApiModelProperty(value = "A resource list of stories in which this character appears.")
  public StoryList getStories() {
    return stories;
  }

  public void setStories(StoryList stories) {
    this.stories = stories;
  }

  public Character events(EventList events) {
    this.events = events;
    return this;
  }

   /**
   * A resource list of events in which this character appears.
   * @return events
  **/
  @ApiModelProperty(value = "A resource list of events in which this character appears.")
  public EventList getEvents() {
    return events;
  }

  public void setEvents(EventList events) {
    this.events = events;
  }

  public Character series(SeriesList series) {
    this.series = series;
    return this;
  }

   /**
   * A resource list of series in which this character appears.
   * @return series
  **/
  @ApiModelProperty(value = "A resource list of series in which this character appears.")
  public SeriesList getSeries() {
    return series;
  }

  public void setSeries(SeriesList series) {
    this.series = series;
  }


  @Override
  public boolean equals(java.lang.Object o) {
  if (this == o) {
    return true;
  }
  if (o == null || getClass() != o.getClass()) {
    return false;
  }
    Character character = (Character) o;
    return ObjectUtils.equals(this.id, character.id) &&
    ObjectUtils.equals(this.name, character.name) &&
    ObjectUtils.equals(this.description, character.description) &&
    ObjectUtils.equals(this.modified, character.modified) &&
    ObjectUtils.equals(this.resourceURI, character.resourceURI) &&
    ObjectUtils.equals(this.urls, character.urls) &&
    ObjectUtils.equals(this.thumbnail, character.thumbnail) &&
    ObjectUtils.equals(this.comics, character.comics) &&
    ObjectUtils.equals(this.stories, character.stories) &&
    ObjectUtils.equals(this.events, character.events) &&
    ObjectUtils.equals(this.series, character.series);
  }

  @Override
  public int hashCode() {
    return ObjectUtils.hashCodeMulti(id, name, description, modified, resourceURI, urls, thumbnail, comics, stories, events, series);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Character {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    resourceURI: ").append(toIndentedString(resourceURI)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    comics: ").append(toIndentedString(comics)).append("\n");
    sb.append("    stories: ").append(toIndentedString(stories)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    series: ").append(toIndentedString(series)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

